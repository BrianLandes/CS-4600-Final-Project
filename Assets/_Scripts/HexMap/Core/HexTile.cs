
using System.Collections.Generic;
using UnityEngine;

namespace HexMap {
	
	/// <summary>
	/// Convenience component that gets added to instantiated HexTiles.
	/// Stores data pertaining to this tile and opens up methods for common functions.
	/// Most of the functionality assumes that the mesh is a hexagon generated by HexagonMaker
	/// </summary>
	[RequireComponent(typeof(MeshFilter))]
	public class HexTile : MonoBehaviour {
		
		//Here we are scaling all coordinates up by 100 when they're passed to Clipper 
		//via Polygon (or Polygons) objects because Clipper no longer accepts floating  
		//point values. Likewise when Clipper returns a solution in a Polygons object, 
		//we need to scale down these returned values by the same amount before displaying.
		private float scale = 100; //or 1 or 10 or 10000 etc for lesser or greater precision.

		public HexMetrics metrics;
		
		/// <summary>
		/// Axial coordinates of the tile
		/// </summary>
		public int column;
		public int row;
		
		public HexMap map;

		public List<Mesh> reusableMeshes = new List<Mesh>();
		
	}
	
	
}
